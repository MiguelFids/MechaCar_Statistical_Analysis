install.packages("tidyverse")
ggplot
ggplot2::aes()
x <- 2
x <- 0
del x
help
help()
jsonlite
library(jsonlite)
jsonlite
install.packages("jsonlite")
# 16.3.1
library(tidyverse)
head(mpg)
plt + geom_bar()#this plots the bar
#import data into ggplot2
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()#this plots the bar
mpg_summary <- mpg %>% group_by %>% summarize(Vehicle_Count=n(), .groups = 'keep')
mpg_summary
?n()
mpg_summary
mpg_summary <- mpg %>% group_by %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
mpg_summary <- mpg %>% group_by %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
mpg_summary <- mpg %>% group_by %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
library(tidyverse)
head(mpg)
#import data into ggplot2
plt <- ggplot(mpg, aes(x=class))
plt + geom_bar()#this plots the bar
mpg_summary <- mpg %>% group_by %>% summarize(Vehicle_Count=n(), .groups = 'keep')
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
mpg_summary
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col()
mpg
plt + geom_col() +xlab("manufacturing comp.") + ylab("# of Vhcls in Dataset")
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
View(plt)
mpg
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep')
mpg_summary
plt <- ggplot(mpg_summary, aes(x=manufacturer, y=Vehicle_Count))
plt + geom_col() +xlab("manufacturing comp.") + ylab("# of Vhcls in Dataset") + theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
?aes
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
plt
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
mpg_summary <- subset(mpg, manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = "keep")
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy))
plt
plt + geom_line()
> plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(16:30)) #add line plot with labels
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(16:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt <- geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MpG)")
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt <- geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MpG)")
rlang::last_error()
rlang::last_trace
rlang::last_trace()
plt <- ggplot(mpg,aes(x=displ,y=cty))
plt <- geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MpG)")
plt
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MpG)")
> plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ, y=cty, color=class, shape=drv))
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MpG", color="Vehicle Class", shape="Type of Drive")
?aes
plt <- ggplot(mpg,aes(x=manufacturer. y=hwy))
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt + geom_boxplot() + theme(axis.text.x=elemnt_text(angle=45,hjust=1))
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt + geom_boxplot() + theme(axis.text.x=elemnt_text(angle=45,hjust=1))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year)
mpg_summary
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
mpg_summary
mpg
mpg_summary <- group_by(class)
mpg_summary <- mpg %>% group_by(class)
mpg_summary
mpg
?group_by
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
mpg_summary
mpg
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MpG")
plt <- ggplot(mpg_summary, aes(x=class,y+factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MpG")
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MpG")
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
mpg_summary
plt <- ggplot(mpg_summary, aes(x=class,y+factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MpG")
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups="keep")
mpg_summary
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year), fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class", y="Vehicle Year", fill="Mean Highway (MpG")
View(mpg_summary)
view <- mpg
View(view)
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary tablempg_summary
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary tablempg_summary
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary tablempg_summary
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary tablempg_summary
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
mpg_sum <- mpg %>% group_by(model,year)
mpg_sum
mpg_sum <- mpg %>% group_by(model)
mpg_sum
mpg_sum <- mpg %>% group_by(model) %>% summarize(Year=year)
mpg_sum
mpg_sum <- mpg %>% group_by(model) %>% summarize(sum=year)
mpg_sum
mpg_sum <- mpg %>% group_by(model) %>% summarize(Year=year)
mpg_sum
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
geom_point() #overlay scatter plot on top
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") #add scatter plot
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine)) #import dataset into ggplot2
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") + #add scatter plot with labels
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine)) #overlay with error bars
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating") #convert to long format
mpg_long
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating", cty:hwy) #convert to long format
mpg_long
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating") #convert to long format
mpg_long
View(mpg_long)
View(mpg_long)
View(mpg_sum)
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(MPG_Type) +
theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none") + xlab("Manufacturer") + ylab("Rating
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(MPG_Type) +
theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none") + xlab("Manufacturer") + ylab("Rating")
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(MPG_Type) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none") + xlab("Manufacturer") + ylab("Rating")
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy)) #convert to long format
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into ggplot2
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1)) #add boxplot with labels rotated 45 degrees
plt <- ggplot(mpg_long, aes(x=manufacturer, y=Rating, color=MPG_Type))
plt + geom_boxplot() + facet_wrap(MPG_Type) + theme(axis.text.x=element_text(angle=45,hjust=1), legend.position="none") + xlab("Manufacturer") + ylab("Rating")
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type)) #import dataset into
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) + #create multiple boxplots, one for each MPG type
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer") #rotate x-axis labels
setwd("~/UofT Bootcamp/week 16/week_16_challenge")
# deliverable 2
data2 <- read.csv("Suspension_Coil.csv")
data2
View(data2)
?summarize
?summarize?var
?var
total_summary <- summarize(Mean=mean(data2$PSI), Median=median(data2$PSI), data = data2)
?summarize
total_summary <- summarise(Mean=mean(data2$PSI), Median=median(data2$PSI), data = data2)
library(tidyverse)
library(dplyr)
data <- read.csv("MechaCar_mpg.csv")
# deliverable 1
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data))
# deliverable 2
data2 <- read.csv("Suspension_Coil.csv")
total_summary <- summarise(Mean=mean(data2$PSI), Median=median(data2$PSI), data = data2)
total_summary <- summarize(Mean=mean(data2$PSI), Median=median(data2$PSI), data = data2)
total_summary <- summarize(Mean=mean(data2$PSI), Median=median(data2$PSI), data = data2)
total_summary <- data2 %>% summarize(Mean=mean(data2$PSI), Median=median(data2$PSI))
total_summary
total_summary <- data2 %>% summarize(Mean=mean(data2$PSI), Median=median(data2$PSI), Variance=var(x=data@PSI))
rlang::last_error()
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(x=PSI))
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI))
total_summary
?var
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(data2$PSI)
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(data2$PSI))
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(data2$PSI))
total_summary <- data2 %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(data2$PSI), Standard_Deviation=sd(data2$PSI))
total_summary
lot_summary <- data2 %>% group_by(data2$Manufacturing_Lot) %>%  summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(data2$PSI), Standard_Deviation=sd(data2$PSI))
lot_summary
lot_summary <- data2 %>% group_by(data2$Manufacturing_Lot) %>%  summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), Standard_Deviation=sd(PSI))
lot_summary
lot_summary <- data2 %>% group_by(data2$Manufacturing_Lot) %>%  summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary
View(lot_summary)
t.test
?t.test
# deliverable 3
sample_table <- data %>% sample_n(100)
# deliverable 3
sample_table <- data %>% sample_n(50)
sample_table
# deliverable 3
sample_table <- data %>% sample_n(50)
sample_table
t.test(sample_table)
t.test(sample_table)
t.test(sample_table)
?subset
?t.test
?subset
t.test(sample_table, subset(sample_table))
t.test(sample_table, subset(sample_table))
# deliverable 3
sample_table <- data %>% sample_n(50)
t.test(sample_table, subset(sample_table))
t.test(sample_table, subset(lot))
# deliverable 3
sample_table <- data2 %>% sample_n(50)
t.test(sample_table, subset(data2$Manufacturing_Lot))
# deliverable 3
sample_table <- data2 %>% sample_n(50)
t.test(sample_table, subset(data2$Manufacturing_Lot))
t.test(sample_table, subset(x=data2$Manufacturing_Lot))
t.test(sample_table, subset(data2)
t.test(sample_table, subset(data)
t.test(sample_table, subset(data)
t.test(sample_table, subset(data))
t.test(sample_table, subset(data))
t.test(sample_table, subset(data))
t.test(sample_table, subset(data2))
?t.test
t.test(sample_table, subset(data2$Manufacturing_Lot))
t.test(sample_table, subset =subset(data2$Manufacturing_Lot))
t.test(sample_table, subset = subset(data2$Manufacturing_Lot))
t.test(sample_table)
# deliverable 3
sample_table <- data2 %>% sample_n(50)
t.test(sample_table)
sample_table
t.test(sample_table)
t.test(sample_table$Manufacturing_Lot, mu=data2$Manufacturing_Lot)
t.test(sample_table$Manufacturing_Lot, mu=mean(data2$Manufacturing_Lot))
data2$Manufacturing_Lot
t.test(sample_table$PSI, mu=mean(data2$PSI))
sample_table1 <- data2 %>% sample_n(50)
sample_table2 <- data2 %>% sample_n(50)
sample_table3 <- data2 %>% sample_n(50)
t.test(sample_table1$PSI, mu=mean(data2$PSI))
t.test(sample_table2$PSI, mu=mean(data2$PSI))
t.test(sample_table3$PSI, mu=mean(data2$PSI))
data
View(data)
View(data2)
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset = subset(data2$Manufacturing_Lot))
data?subset()
data?subset()
data?subset
?subset()
data2$Manufacturing_Lot
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(data2, Manufacturing_Lot == "Lot1"))
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(data2, data2$Manufacturing_Lot == "Lot1"))
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(data2, select  == "Lot1"))
airquality
subset(airquality, select = Ozone:Wind)
subset(airquality, select = Ozone:Wind)
subset(airquality, select = Ozone:Wind)
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(data2, select = Manufacturing_Lot:PSI))
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(sample_table1, select = Manufacturing_Lot:PSI))
t.test(sample_table1$PSI, mu=mean(data2$PSI))
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset(sample_table1, select = Manufacturing_Lot:PSI))
manufacturing_lot
sample_table1
t.test
?t.test
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 1")
t.test(sample_table2$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 2")
t.test(sample_table3$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 3")
sample_table1 <- data2 %>% sample_n(50)
sample_table2 <- data2 %>% sample_n(50)
sample_table3 <- data2 %>% sample_n(50)
t.test(sample_table1$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 1")
t.test(sample_table2$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 2")
t.test(sample_table3$PSI, mu=mean(data2$PSI), subset = Manufacturing_Lot == "Lot 3")
